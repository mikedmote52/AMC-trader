services:
  # Backend API Service - Web Process Only
  - type: web
    name: amc-trader
    env: python
    plan: standard
    buildCommand: pip install -r requirements.txt
    startCommand: uvicorn backend.src.app:app --host 0.0.0.0 --port $PORT
    envVars:
      # Force BMS V1.1 in production (matches current codebase)
      - key: SCORING_STRATEGY
        value: bms_v1
      - key: FORCE_STRATEGY
        value: bms_v1
      - key: ALLOW_STRATEGY_OVERRIDE
        value: "false"
      
      # Redis connection (from managed service)
      - key: REDIS_URL
        fromService:
          name: amc-redis
          type: redis
          
      # Existing required environment variables (values from Render dashboard)
      - key: POLYGON_API_KEY
        sync: false
      - key: DATABASE_URL
        sync: false
      - key: ALPACA_API_KEY
        sync: false
      - key: ALPACA_SECRET_KEY
        sync: false
      - key: ALPACA_BASE_URL
        sync: false
        
      # Additional configuration
      - key: ENVIRONMENT
        value: production
      - key: LOG_LEVEL
        value: INFO
      - key: DISCOVERY_CACHE_TTL
        value: "60"
    
    healthCheckPath: /health
    autoDeploy: true

  # Dedicated Discovery Worker Service
  - type: worker
    name: amc-trader-worker
    env: python
    plan: starter
    buildCommand: pip install -r requirements.txt
    startCommand: python start_worker.py
    envVars:
      # Redis connection (from managed service)
      - key: REDIS_URL
        fromService:
          name: amc-redis
          type: redis
          
      # API keys needed by worker
      - key: POLYGON_API_KEY
        sync: false
      - key: SCORING_STRATEGY
        value: bms_v1
        
      # Worker configuration
      - key: LOG_LEVEL
        value: INFO
      - key: DISCOVERY_CACHE_TTL
        value: "60"

  # Frontend Static Site
  - type: web
    name: amc-frontend
    env: static
    buildCommand: cd frontend && npm install && npm run build
    staticPublishPath: frontend/dist
    headers:
      - path: /*
        name: Cache-Control
        value: no-cache, no-store, must-revalidate
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

databases:
  # Redis for caching and job queue
  - name: amc-redis
    plan: starter
    ipAllowList: []  # private