services:
  # Main API service
  - type: web
    name: stock-discovery-api
    runtime: docker
    dockerfilePath: ./backend/Dockerfile
    dockerContext: ./backend
    region: oregon
    plan: starter
    healthCheckPath: /health
    autoDeploy: true
    envVars:
      - key: POLYGON_API_KEY
        sync: false
      - key: ALPACA_API_KEY
        sync: false
      - key: ALPACA_API_SECRET
        sync: false
      - key: ALPACA_BASE_URL
        value: https://paper-api.alpaca.markets
      - key: DATABASE_URL
        fromDatabase:
          name: trading-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: trading-redis
          property: connectionString
      - key: FRONTEND_PUBLIC_API_BASE
        fromService:
          type: web
          name: stock-discovery-api
          property: host

  # Frontend static site
  - type: static
    name: stock-discovery-ui
    buildCommand: npm ci && npm run build
    staticPublishPath: ./dist
    rootDir: frontend
    autoDeploy: true
    envVars:
      - key: VITE_API_BASE
        fromService:
          type: web
          name: stock-discovery-api
          property: host

  # Discovery cron job
  - type: cron
    name: stock-discovery-cron
    runtime: docker
    dockerfilePath: ./backend/Dockerfile
    dockerContext: ./backend
    schedule: "*/5 * * * MON-FRI"
    region: oregon
    command: "python -m src.jobs.discover"
    envVars:
      - key: POLYGON_API_KEY
        sync: false
      - key: ALPACA_API_KEY
        sync: false
      - key: ALPACA_API_SECRET
        sync: false
      - key: ALPACA_BASE_URL
        value: https://paper-api.alpaca.markets
      - key: DATABASE_URL
        fromDatabase:
          name: trading-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: trading-redis
          property: connectionString

databases:
  - name: trading-db
    plan: starter
    region: oregon
    databaseName: stockdiscovery
    user: stockuser

# Note: Redis is a paid service on Render
# You'll need to set up Redis separately or use RedisLabs/Upstash